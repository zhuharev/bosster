# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import bosster_pb2 as bosster__pb2


class PosterStub(object):
  """The greeting service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Post = channel.unary_unary(
        '/main.Poster/Post',
        request_serializer=bosster__pb2.PostRequest.SerializeToString,
        response_deserializer=bosster__pb2.PostReply.FromString,
        )


class PosterServicer(object):
  """The greeting service definition.
  """

  def Post(self, request, context):
    """Sends a greeting
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PosterServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Post': grpc.unary_unary_rpc_method_handler(
          servicer.Post,
          request_deserializer=bosster__pb2.PostRequest.FromString,
          response_serializer=bosster__pb2.PostReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'main.Poster', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
